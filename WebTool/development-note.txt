
This project is created to base project for work extra testing tool. But this frame can be used as starting project for MVC/DB related. 

### DB package
// Make first time working

1. files in db package
2. config files spring-config-hsql.xml -> change component scan to proper package anme
   need persistence.xml file -> add bean class to persist. ** need to figure out specify by package. otherwise, have to update all the time. 
3. make sure annontation required for Transaction in FixMsgDao. Otherwise, no transaction error 
	@Transactional(propagation = Propagation.REQUIRED)
	

	// Issues
	
1. Transaction not there exception 
	
1. fix_message is not mapped - failed raised in         List<FIXMsgEntry> all = fixMsgPersistService.getDbOutDao().selectAll();
	(1) issue was SQL should use the class name not the actual table name.
	(2) When I had fields like select id,time,type,fix from FixMsgEntry -> returned objects are in "Object". 
	    so changed the sql to "select f from FIXMsgEntry f". then correctly mapped to the class
		    
### Spring related error. while start up. 

Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [javax.persistence.EntityManagerFactory] is defined
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.findDefaultEntityManagerFactory(PersistenceAnnotationBeanPostProcessor.java:575)
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.findEntityManagerFactory(PersistenceAnnotationBeanPostProcessor.java:531)
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor$PersistenceElement.resolveEntityManager(PersistenceAnnotationBeanPostProcessor.java:697)
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor$PersistenceElement.getResourceToInject(PersistenceAnnotationBeanPostProcessor.java:670)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PersistenceAnnotationBeanPostProcessor.java:354)
	... 36 more
	
	
	>> How to resolve. 
	
	SpringWebConfig class had "com.webtool.db" in the component scan. 
	Autowired anontation caused the issue to fail to find the object, because it is defined in another config file. 
	so there are two resolution. 
	
	(1) remove "com.webtool.db" from SpringWebConfig
	(2) import spring config file that define EntityManagerFactory from the main spring config file so that component scan can hit the EntityManagerFactory
	
	